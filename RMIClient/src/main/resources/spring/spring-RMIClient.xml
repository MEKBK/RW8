<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 自动扫描
在指定包下，若某类带有特定注解，@Component、@Repository、@Service、@Controller,
则会将这个对象作为Bean注册到Spring容器中。   -->
    <context:component-scan base-package="com.kbk"/>
    <!-- 加载TenXun.properties -->
    <context:property-placeholder location="classpath:TenXun.properties" file-encoding="UTF-8" ignore-unresolvable="true"/>
    <!-- 加载AliBaBa.properties -->
    <context:property-placeholder location="classpath:AliBaBa.properties" file-encoding="UTF-8" ignore-unresolvable="true"/>
    <!-- 加载redis.xml -->
    <import resource="classpath:redis.xml"/>




    <!--RMI客户端配置-->
    <!-- 客户端调用-UserServiceA -->
    <bean name="UserServiceA" class="org.springframework.remoting.rmi.RmiProxyFactoryBean" lazy-init="true">
        <!-- 根据服务端的serviceName（服务名）和registryPort（端口）组成的访问地址 -->
        <property name="serviceUrl" value="rmi://127.0.0.1:1234/ServiceA"></property>
        <property name="serviceInterface" value="com.kbk.service.UserService"></property>
        <!-- 预查找远程对象 默认为true -->
        <property name="lookupStubOnStartup" value="false"/>
        <!-- 是否刷新远程调用缓存的stub -->
        <property name="refreshStubOnConnectFailure" value="true"></property>
    </bean>

    <!-- 客户端调用-UserServiceB -->
    <bean name="UserServiceB" class="org.springframework.remoting.rmi.RmiProxyFactoryBean" lazy-init="true">
        <!-- 根据服务端的serviceName（服务名）和registryPort（端口）组成的访问地址 -->
        <property name="serviceUrl" value="rmi://127.0.0.1:1212/ServiceB"></property>
        <property name="serviceInterface" value="com.kbk.service.UserService"></property>
        <!-- 预查找远程对象 默认为true -->
        <property name="lookupStubOnStartup" value="false"/>
        <!-- 是否刷新远程调用缓存的stub -->
        <property name="refreshStubOnConnectFailure" value="true"></property>
    </bean>


</beans>
